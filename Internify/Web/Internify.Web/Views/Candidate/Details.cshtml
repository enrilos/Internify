@model CandidateDetailsViewModel

@inject ICandidateService candidateService;

@{
    ViewData["Title"] = "Details";
}

<section class="border border-dark rounded p-4">

    @if (Model.Id == candidateService.GetIdByUserId(User?.Id()))
    {
        <a class="btn btn-primary rounded m-1"
       asp-controller="Candidate"
       asp-action="Edit"
       asp-route-id="@Model.Id">Edit</a>
    }
    @if (User.IsAdmin())
    {
        <!-- Button trigger modal -->
        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal">
            Delete
        </button>

        <!-- Modal -->
        <section class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <section class="modal-dialog">
                <section class="modal-content">
                    <section class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Delete candidate</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </section>
                    <section class="modal-body">
                        <p>Delete this candidate?</p>
                    </section>
                    <section class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>

                        <a class="btn btn-danger rounded m-1"
                       asp-area="Administrator"
                       asp-controller="Candidate"
                       asp-action="Delete"
                       asp-route-id="@Model.Id">Delete</a>
                    </section>
                </section>
            </section>
        </section>
    }

    <section class="container d-flex bd-highlight justify-content-evenly align-items-center flex-wrap">
        <article>
            <img src="@Model.ImageUrl" class="img-fluid rounded p-1" />
        </article>
        <article class="p-3">
            <p>Full Name: @Model.FirstName @Model.LastName</p>
            <p>Born: @Model.BirthDate</p>
            <p>Gender: @Model.Gender</p>
            @if (@Model.WebsiteUrl != null)
            {
                <p>Website: <a href="@(@Model.WebsiteUrl.Contains("http") ? @Model.WebsiteUrl : $"http://{@Model.WebsiteUrl}")">@Model.WebsiteUrl</a></p>
            }
            <p>Specialization: @Model.Specialization</p>
            <p>Country: @Model.Country</p>
            <p>@(@Model.IsAvailable == true ? "✔️ Open for offers" : "❌ Currently not available")</p>
            <p>@(@Model.ModifiedOn == null ? $"Created on: {@Model.CreatedOn}" : $"Modified on: {@Model.ModifiedOn}")</p>
        </article>
    </section>
    <article class="p-2 m-3 bg-light">
        @if (@Model.Description == null)
        {
            <p class="text-center">Apparently, this user prefers to keep an air of mystery about them.</p>
        }
        else
        {
            <p class="text-center" style="word-wrap: break-word;">@Model.Description</p>
        }
    </article>
</section>