@model CandidateDetailsViewModel

@inject ICandidateService candidateService;

<section class="border border-dark rounded p-4">

    @if (Model.Id == candidateService.GetIdByUserId(User?.Id()))
    {
        <a class="btn btn-primary rounded my-1"
            asp-controller="Candidate"
            asp-action="Edit"
            asp-route-id="@Model.Id">Edit</a>
    }

    <section class="container d-flex bd-highlight justify-content-evenly align-items-center flex-wrap">
        <article>
            <img src="@Model.ImageUrl" class="img-fluid rounded p-1" />
        </article>
        <article class="p-3">
            <p>Full Name: @Model.FirstName @Model.LastName</p>
            <p>Born: @Model.BirthDate</p>
            <p>Gender: @Model.Gender</p>
            @if (@Model.WebsiteUrl != null)
            {
                <p>Website: <a href="@(@Model.WebsiteUrl.Contains("http") ? @Model.WebsiteUrl : $"http://{@Model.WebsiteUrl}")">@Model.WebsiteUrl</a></p>
            }
            <p>Specialization: @Model.Specialization</p>
            <p>Country: @Model.Country</p>
            <p>@(@Model.IsAvailable == true ? "✔️ Open for offers" : "❌ Currently not available")</p>
            <p>@(@Model.ModifiedOn == null ? $"Created on: {@Model.CreatedOn}" : $"Modified on: {@Model.ModifiedOn}")</p>
        </article>
    </section>
    <article class="p-2 m-3 bg-light">
        @if (@Model.Description == null)
        {
            <p class="text-center">Apparently, this user prefers to keep an air of mystery about them.</p>
        }
        else
        {
            <p class="text-center" style="word-wrap: break-word;">@Model.Description</p>
        }
    </article>
</section>